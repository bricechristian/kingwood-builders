---
import { useSanityClient } from "astro-sanity";

import { urlForImage } from "../utilities/sanityImage.js";

import Layout from "../layouts/Layout.astro";
import FeaturedProjects from "../components/FeaturedProjects.astro"
import TextImage from "../components/TextImage.astro"
import Services from "../components/Services.astro"
import Team from "../components/Team.astro"
import Steps from "../components/Steps.astro"
import CtaLargeText from "../components/CtaLargeText.astro"

export const prerender = true;

// Astro.url.search.includes("preview=true")

// const previewResponse = await fetch(
// 	`https://kingwood-builders.netlify.app/.netlify/functions/preview?type=page&slug=landing`
// );
// const responseJSON = await previewResponse.json();
// console.log(responseJSON)
// data = responseJSON.data;
const data = await useSanityClient().fetch(`
	*[_type=='page' && slug.current == "home"][0] {
	..., 
	content[] {
		...,
        team[]->,
        projects[]->
	}	
	}
`);

const { content } = data;

// const featuredImage = content[0].images[0];

---

<style>
	@media (max-width: 479px) and (orientation: portrait) {
		section {
			min-height: auto;
		}
	}
	@media (orientation: landscape) {
		section {
			min-height: 600px;
		}
	}
	picture:before {
		content: "";
		display: inline-block;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(235, 234, 223, 0.4);
		z-index: 11;
	}
</style>

<Layout title={data.settings.ogTitle} description={data.settings.ogDescription}>
	{
		data.content?.map((section) => {
			switch (section._type) {
				case "projectCarousel":
                    return (
                        <FeaturedProjects data={section.projects} /> 
                    )
				case "textImage":
                    return (
                        <TextImage data={section} /> 
                    )
                case "services":
                    return (
                        <Services data={section} /> 
                    )
				case "team":
                    return (
                        <Team data={section} /> 
                    )
				case "steps":
                    return (
                        <Steps data={section} /> 
                    )
				case "ctaLargeText":
                    return (
                        <CtaLargeText data={section} /> 
                    )
				default:
                    return (
                        <section class="py-40">
                            <div class="grid-layout text-center">
                                <div class="grid-span-xl">
                                    <h1
                                        class="justify-center"
                                        data-viewport="typography-shift">
                                        <span>{data.title}</span>
                                    </h1>
                                </div>
                            </div>
                        </section>
                    )
			}
		})
	}
</Layout>